{"ast":null,"code":"var _jsxFileName = \"/Users/pascal/test/ReactJS/pendu/src/Model/word.js\";\nimport React from \"react\";\n\nclass Word extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: \"\"\n    };\n  }\n\n  setGuesseWord(e) {\n    if (e.key === \"Enter\") console.log(this.state.word);else this.state.word += e.keys;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Word to guesses\",\n      onKeyDown: e => this.setGuesseWord(e),\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Word;","map":{"version":3,"sources":["/Users/pascal/test/ReactJS/pendu/src/Model/word.js"],"names":["React","Word","Component","constructor","props","state","word","setGuesseWord","e","key","console","log","keys","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AACDC,EAAAA,aAAa,CAACC,CAAD,EAAG;AACZ,QAAIA,CAAC,CAACC,GAAF,KAAS,OAAb,EACIC,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,IAAvB,EADJ,KAGI,KAAKD,KAAL,CAAWC,IAAX,IAAmBE,CAAC,CAACI,IAArB;AACP;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,WAAW,EAAC,iBADhB;AAEI,MAAA,SAAS,EAAGL,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB,CAFtB;AAGI,MAAA,SAAS,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQE;;AAtBwB;;AAyBlC,eAAeP,IAAf","sourcesContent":["import React from \"react\"\n\n\nclass Word extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            word: \"\"\n        }\n    }\n    setGuesseWord(e){\n        if (e.key ===\"Enter\")\n            console.log(this.state.word)\n        else\n            this.state.word += e.keys\n    }\n    render(){\n        return (    \n            <form> \n                <input \n                    placeholder=\"Word to guesses\" \n                    onKeyDown={(e) => this.setGuesseWord(e)}\n                    autoFocus\n                ></input>\n            </form>\n        )}\n}\n\nexport default Word"]},"metadata":{},"sourceType":"module"}